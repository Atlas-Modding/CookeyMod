plugins {
	id 'fabric-loom' version '0.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

configurations {
	includeClasspath
}

repositories {
	maven {
		url 'https://maven.terraformersmc.com/'
	}
	maven {
		url 'https://maven.shedaniel.me/'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings minecraft.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modApi include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_api_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	implementation includeClasspath("com.moandjiezana.toml:toml4j:${project.toml4j_version}")
	modImplementation include(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))
	modImplementation include(fabricApi.module("fabric-key-binding-api-v1", project.fabric_version))
	modImplementation include(fabricApi.module("fabric-screen-api-v1", project.fabric_version))
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

// Custom Manifest and Intermediary mappings declaration
minecraft {
	/*customManifest = "https://gist.githubusercontent.com/rizecookey/4c6142baaccc3875f9b227fe22f2ace5/raw/c8ed74b19f7a5315813c9d4b199798b692a8f359/1.16_combat-6.json"
	intermediaryUrl = { mcVersion ->
		return "https://maven.combatreforged.com/net/fabricmc/intermediary/${mcVersion}/intermediary-${mcVersion}-v2.jar";
	}*/
	accessWidener "src/main/resources/cookeymod.accesswidener"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
	from {
		configurations.includeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	manifest {
		attributes 'Main-Class': 'net.rizecookey.updater.Updater'
	}
}